@* @using GrpcSinhVien
@using Microsoft.AspNetCore.Components

<div class="modal show d-block" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@(string.IsNullOrEmpty(SinhVien?.MaSo) ? "Thêm sinh viên" : "Sửa sinh viên")</h5>
                <button type="button" class="btn-close" @onclick="() => OnCanceled.InvokeAsync(null)"></button>
            </div>
            <div class="modal-body">
                <input class="form-control mb-2" @bind="SinhVien.HoTen" placeholder="Họ tên" />
                <input class="form-control mb-2" @bind="SinhVien.NgaySinh" placeholder="Ngày sinh (DD/MM/YYYY)" />
                <input class="form-control mb-2" @bind="SinhVien.DiaChi" placeholder="Địa chỉ" />
                <input class="form-control mb-2" @bind="SinhVien.TenLop" placeholder="Tên lớp" />
                <input class="form-control mb-2" @bind="SinhVien.MonHoc" placeholder="Môn học" />
                <input class="form-control mb-2" @bind="SinhVien.TenGiaoVien" placeholder="Tên giáo viên" />
                <input class="form-control mb-2" @bind="SinhVien.NgaySinhGV" placeholder="Ngày sinh GV (DD/MM/YYYY)" />
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="() => OnCanceled.InvokeAsync(null)">Huỷ</button>
                <button class="btn btn-primary" @onclick="LuuSinhVien">Lưu</button>
            </div>
        </div>
    </div>
</div>
<div class="modal-backdrop fade show"></div>

@code {
    [Parameter] public SinhVienModel SinhVien { get; set; } = new();
    [Parameter] public EventCallback<SinhVienModel> OnSaved { get; set; }
    [Parameter] public EventCallback<object> OnCanceled { get; set; }

    [Inject] public SinhVienService.SinhVienServiceClient SinhVienGrpc { get; set; }

    private async Task LuuSinhVien()
    {
        if (string.IsNullOrEmpty(SinhVien.MaSo))
        {
            SinhVien.MaSo = "SV_" + Guid.NewGuid().ToString("N")[..6];
            await SinhVienGrpc.ThemAsync(SinhVien);
        }
        else
        {
            await SinhVienGrpc.SuaAsync(SinhVien);
        }

        await OnSaved.InvokeAsync(SinhVien);
    }
}
 *@
@using GrpcSinhVien
@using Microsoft.AspNetCore.Components.Forms
@inject SinhVienService.SinhVienServiceClient SinhVienGrpc
@inject IJSRuntime JS

@code {
    [Parameter] public SinhVienModel SinhVien { get; set; }
    [Parameter] public EventCallback OnSaved { get; set; }
    [Parameter] public EventCallback OnCanceled { get; set; }

    private DateTime NgaySinhDate
    {
        get => DateTime.TryParseExact(SinhVien.NgaySinh, "dd/MM/yyyy", null, System.Globalization.DateTimeStyles.None, out var date)
                ? date
                : DateTime.Today;
        set => SinhVien.NgaySinh = value.ToString("dd/MM/yyyy");
    }

    private DateTime NgaySinhGVDate
    {
        get => DateTime.TryParseExact(SinhVien.NgaySinhGV, "dd/MM/yyyy", null, System.Globalization.DateTimeStyles.None, out var date)
                ? date
                : DateTime.Today;
        set => SinhVien.NgaySinhGV = value.ToString("dd/MM/yyyy");
    }

    private async Task LuuSinhVien()
    {
        if (string.IsNullOrWhiteSpace(SinhVien.HoTen) ||
            string.IsNullOrWhiteSpace(SinhVien.TenLop) ||
            string.IsNullOrWhiteSpace(SinhVien.TenGiaoVien))
        {
            await JS.InvokeVoidAsync("alert", "Vui lòng nhập đầy đủ thông tin bắt buộc!");
            return;
        }

        if (string.IsNullOrEmpty(SinhVien.MaSo))
        {
            SinhVien.MaSo = "SV_" + Guid.NewGuid().ToString("N")[..6];
            await SinhVienGrpc.ThemAsync(SinhVien);
        }
        else
        {
            await SinhVienGrpc.SuaAsync(SinhVien);
        }

        await OnSaved.InvokeAsync();
    }
}

<div class="modal show d-block" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@((string.IsNullOrEmpty(SinhVien?.MaSo)) ? "Thêm sinh viên" : "Sửa sinh viên")</h5>
                <button type="button" class="btn-close" @onclick="OnCanceled"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="SinhVien" OnValidSubmit="LuuSinhVien">
                    <InputText class="form-control mb-2" @bind-Value="SinhVien.HoTen" placeholder="Họ tên" />
                    <InputDate class="form-control mb-2" @bind-Value="NgaySinhDate" />
                    <InputText class="form-control mb-2" @bind-Value="SinhVien.DiaChi" placeholder="Địa chỉ" />
                    <InputText class="form-control mb-2" @bind-Value="SinhVien.TenLop" placeholder="Tên lớp" />
                    <InputText class="form-control mb-2" @bind-Value="SinhVien.MonHoc" placeholder="Môn học" />
                    <InputText class="form-control mb-2" @bind-Value="SinhVien.TenGiaoVien" placeholder="Tên giáo viên" />
                    <InputDate class="form-control mb-2" @bind-Value="NgaySinhGVDate" />

                    <div class="text-end">
                        <button class="btn btn-secondary me-2" type="button" @onclick="OnCanceled">Huỷ</button>
                        <button class="btn btn-primary" type="submit">Lưu</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
<div class="modal-backdrop fade show"></div>

